% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_rename.R
\name{match_rename}
\alias{match_rename}
\title{Match and rename columns using unglue syntax}
\usage{
match_rename(patterns, repl = identity, ..., convert = TRUE)
}
\arguments{
\item{patterns}{a character vector or a list of character vectors, if a list,
items will be pasted using an empty separator (\code{""}).}

\item{repl}{function to apply on matched substrings, formula (if package rlang
is installed), substring, or named list of such.}

\item{...}{Unused.}

\item{convert}{Whether to convert matches to integer where possible.}
}
\description{
Renames a pattern matched set of columns using \code{unglue::unglue_sub()}
}
\examples{
library(dplyr, warn.conflicts = FALSE)
df <- data.frame(
  x_1 = 1,
  x_2 = 2,
  y_1 = 3,
  y_2 = 4,
  nomatch = 0
)

# Select and rename
df \%>\%
  select(
    match_rename("{letter}_{number}", list(toupper, ~ .x * 10))
  )

# More explicit form
df \%>\%
  select(
    match_rename(
      patterns = "{letter=x|y}_{number=\\\\d}",
      repl = list(letter = toupper, number = ~ .x * 10),
      convert = TRUE
    )
  )

# Use inside `rename()` to rename in place, without subsetting columns
df \%>\%
  rename(
    match_rename("{letter}_{number}", list(toupper, ~ .x * 10))
  )
}
\seealso{
\code{\link[unglue:unglue_sub]{unglue::unglue_sub()}}
}
