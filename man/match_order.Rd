% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_order.R
\name{match_order}
\alias{match_order}
\title{Match and sort columns with regex capture groups}
\usage{
match_order(match, ordering, ..., order_by = c("fastest", "slowest"))
}
\arguments{
\item{match}{A regular expression. Passed to \code{tidyselect::matches()}.}

\item{ordering}{An integer vector of regex capture group IDs to order
the columns by. Negative indices sort the group in reverse order.
If not specified, defaults to the mutually exclusive argument \code{order_by}.}

\item{...}{
  Arguments passed on to \code{\link[tidyselect:starts_with]{tidyselect::matches}}
  \describe{
    \item{\code{ignore.case}}{If \code{TRUE}, the default, ignores case when matching
names.}
    \item{\code{vars}}{A character vector of variable names. If not supplied,
the variables are taken from the current selection context (as
established by functions like \code{select()} or \code{pivot_longer()}).}
    \item{\code{perl}}{Should Perl-compatible regexps be used?}
  }}

\item{order_by}{One of \code{"fastest"} or \code{"slowest"}. Determines the speed
of cycling through column groups. Mutually exclusive with \code{ordering}.
Defaults to \code{"fastest"}.}
}
\description{
Match and sort columns with regex capture groups
}
\examples{
library(dplyr, warn.conflicts = FALSE)
df <- data.frame(
  x_1 = 1,
  x_2 = 2,
  y_2 = 3,
  y_1 = 4,
  y_3 = 5,
  x_3 = 6
)

# Comparison: `matches()`
df \%>\%
  select(matches("(x|y)_(\\\\d)"))

# Order with priority on keeping the letters (1st group) close together
df \%>\%
  select(match_order("(x|y)_(\\\\d)", c(1, 2)))
# Same as above, but sort letters in reverse order
df \%>\%
  select(match_order("(x|y)_(\\\\d)", c(-1, 2)))

# Order with priority on keeping the numbers (2nd group) close together
df \%>\%
  select(match_order("(x|y)_(\\\\d)", c(2, 1)))
# Same as above, the 2nd group is "slowest" because it has more categories
df \%>\%
  select(match_order("(x|y)_(\\\\d)", order_by = "slowest"))
}
\seealso{
\code{\link[tidyselect:starts_with]{tidyselect::matches()}}
}
